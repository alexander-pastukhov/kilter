% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_responses.R
\name{count_responses}
\alias{count_responses}
\title{Compute total count and proportion responses for each level per combination of factors}
\usage{
count_responses(df, formula, resample = FALSE, predictions = NULL)
}
\arguments{
\item{df}{Table with data}

\item{formula}{Formula that specifies outcome variable, fixed and random effects.}

\item{resample}{logical or formula. \code{resample = TRUE} : resampled with replacement over entire table. \verb{resample = ~ <var1> + <var2> + ...} resample over grouped data.}

\item{predictions}{vector or NULL. Optional values that \emph{replace} original response values. Useful for applying the same counting procedure for model predictions.}
}
\value{
tibble with columns for all fixed factors and response variable, as well as columns \code{N} (total count) and \code{P} (proportion of responses for this level).
}
\description{
Compute total count and proportion of responses for each level per combination of factors
defined as a formula: \verb{<response_var> ~ <fixed_factor1> +  <fixed_factor2> + ... (1|<random_factor1>) + (1|<random_factor2>) + ...}.
The \verb{<response_var>} must be a factor, as the function fills in missing response level counts with zeros.
}
\details{
The data is first grouped by all fixed and random factors and responses are counted per factor level. Any missing combinations are
filled in with zero counts. Next, function computes proportion of each response level for all fixed and random factors combinations.
Finally, it groups data only by fixed factors and compute total counts and averagere proportion of responses per factor level.

Optionally, the data can be resampled with replacement before counting. To resample over entire table set \code{resample = TRUE}. Alternatively,
you can resample within data group by using a formula: \verb{resample = ~ <var1> + <var2> + ...}. Here, the data is first grouped and then resampled.
}
\examples{
data(art)

counts <- count_responses(art, Response ~ Group + PaintingKind + Scale)

# with resampling over entire table
count_sample <- count_responses(art, Response ~ Group + PaintingKind + Scale, resample = TRUE)

# with resampling per group
count_sample <- count_responses(art, Response ~ Group + PaintingKind + Scale, resample = ~ Group)
}
