% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_responses.R
\name{plot_responses}
\alias{plot_responses}
\title{Plot proportion or count of responses}
\usage{
plot_responses(
  df,
  x,
  y,
  ymin = NULL,
  ymax = NULL,
  ribbon_ymin = NULL,
  ribbon_ymax = NULL,
  color = NULL,
  group = NULL,
  cutpoints = NULL,
  fill_interval = c("gray90", "gray85")
)
}
\arguments{
\item{df}{Table with data}

\item{x}{Name of the response level variable}

\item{y}{Name of variable with statistic, either proportion \code{P} or counts \code{N}}

\item{ymin}{Name of variable with lower limit for error bar, e.g., \code{LowerCI}. Optional.}

\item{ymax}{Name of variable with lower limit for error bar, e.g., \code{UpperCI}. Optional.}

\item{ribbon_ymin}{Name of variable with lower limit for ribbon, e.g., \code{PosteriorLowerCI}. Optional.}

\item{ribbon_ymax}{Name of variable with upper limit for ribbon, e.g., \code{PosteriorUpperCI}. Optional.}

\item{color}{Name of variable that maps color. Optional.}

\item{group}{Name of variable that maps grouping. Optional.}

\item{cutpoints}{Optional vector of estimated cut points. In case of the matrix, average as computed per column}

\item{fill_interval}{Fill colors for stripes that indicate intervals.}
}
\value{
ggplot
}
\description{
Plot proportion or count of responses
}
\examples{
data(aiq)
aiq_avg <- bootstrap_response_counts(aiq, Response ~ Group + Question, R = 100)
aiq_q1 <- dplyr::filter(aiq_avg, Question == Question[1])
plot_responses(aiq_q1, x = Response, y = P, color = Group)

# with errorbars
plot_responses(aiq_q1, x = Response, y = P, ymin = LowerCI, ymax = UpperCI, color = Group)

# with ribbon intead of error bars
plot_responses(aiq_q1, x = Response, y = P,
               ribbon_ymin = LowerCI, ribbon_ymax = UpperCI, color = Group)

# with cutpoints from the model fit
data(aiq_draws)
cutpoints_draws <- extract_stan_posterior_matrix(aiq_draws, cutpoints)
plot_responses(aiq_q1, x = Response, y = P, ymin = LowerCI, ymax = UpperCI,
               color = Group, cutpoints = inv_logit(colMeans(cutpoints_draws)))
}
